name: run tests
on: [push]
jobs:
  App-setup:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v2
      
      - name: Install dependencies
        run: npm install

      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

  jest-run:
    needs: App-setup
    runs-on: ubuntu-latest
    
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0
     
      - name: Run jest
        run: npm run test:unit
  
  cypress-run:
    needs: App-setup
    runs-on: ubuntu-latest
   
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm run start:test
          wait-on: http://localhost:3030

  lint-run:
    needs: App-setup
    runs-on: ubuntu-latest
    
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Run lint
        run: npm run lint

  Deploy:
    runs-on: ubuntu-latest
    needs: [jest-run, cypress-run, lint-run]

    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: zip-files
        uses: papeloto/action-zip@v1
        with:
          files: acebook-ale
          recursive: false
          dest: app.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::134491901103:role/GitHubActionsRole
          aws-region: eu-west-2

      - name: Copy files to the website with the AWS CLI
        run: |
          aws s3 sync . s3://bucketofale
      
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ale-acebook \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name deploy-acebook-ale \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=bucketofale,key=app.zip,bundleType=zip \
    